name: CI

on:
  push:
    branches: [ master ]
  pull_request_target:
    branches: [ master ]
  workflow_dispatch:

jobs:
  unit_tests:
    name: Run pytest unit tests
    runs-on: ubuntu-latest
    environment: development
    env:
      DB_CONN_STR: ${{ vars.DB_CONN_STR }}
      DB_BUCKET_NAME: ${{ vars.DB_BUCKET_NAME }}
      DB_SCOPE_NAME: ${{ vars.DB_SCOPE_NAME }}
      DB_USERNAME: ${{ vars.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Set up Python and requirements
        run: |
          sudo apt -y update
          sudo apt -y install python3-pip python3-testresources
          python -m pip install -r api/requirements.txt

      - name: Run tests
        run: ./scripts/pytest-test.sh


  api_tests:
    name: Run realworld api tests
    runs-on: ubuntu-latest
    environment: development
    needs: unit_tests
    env:
      DB_CONN_STR: ${{ vars.DB_CONN_STR }}
      DB_BUCKET_NAME: ${{ vars.DB_BUCKET_NAME }}
      DB_SCOPE_NAME: ${{ vars.DB_SCOPE_NAME }}
      DB_USERNAME: ${{ vars.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Set up Python and requirements
        run: |
          sudo apt -y update
          sudo apt -y install python3-pip python3-testresources
          python -m pip install -r api/requirements.txt

      - name: Start the FastAPI server
        run: |
          ./scripts/start-api.sh &
          # Wait for the server
          while ! curl "http://localhost:8000/health" > /dev/null 2>&1
          do
            sleep 1;
          done
          echo "Server ready."

      - name: Run realworld backend tests
        run: ./scripts/realworld-test.sh
        env:
          APIURL: http://localhost:8000

  e2e_tests:
    name: Run E2E tests
    runs-on: ubuntu-latest
    environment: development
    needs: api_tests
    env:
      DB_CONN_STR: ${{ vars.DB_CONN_STR }}
      DB_BUCKET_NAME: ${{ vars.DB_BUCKET_NAME }}
      DB_SCOPE_NAME: ${{ vars.DB_SCOPE_NAME }}
      DB_USERNAME: ${{ vars.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
        
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Set up Python and requirements
      run: |
        sudo apt -y update
        sudo apt -y install python3-pip python3-testresources
        python -m pip install -r api/requirements.txt

    - name: Start the FastAPI server
      run: |
        ./scripts/start-api.sh &
        # Wait for the server
        while ! curl "http://localhost:8000/health" > /dev/null 2>&1
        do
          sleep 1;
        done
        echo "Server ready."
        
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: npm install
      working-directory: angular-conduit-signals/
        
    - name: Start the Angular frontend
      run: |
        npm run start &
        # Wait for the frontend to be available
        while ! curl "http://localhost:4200" > /dev/null 2>&1
        do
          sleep 1;
        done
        echo "Frontend ready."
      working-directory: angular-conduit-signals/
        
    - name: Run E2E tests
      run: npx cypress run
      working-directory: angular-conduit-signals/
