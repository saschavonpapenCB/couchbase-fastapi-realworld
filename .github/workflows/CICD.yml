name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# concurrency required to avoid terraform lock contention during ECR provisioning
concurrency: cicd-${{ github.repository }}-pipeline

jobs:

  Start:
    runs-on: ubuntu-latest
    steps:
      - name: Start Message
        run: echo Starting pipeline!


  prepare-dev-deployment:
    # NOTE: No name
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [Start]
    environment: development
    # NOTE: No permissions
    # NOTE: No outputs

    steps:
      - name: Log BACKEND_DYNAMODB_TABLE
        run: |
          set -eux
          echo "BACKEND_DYNAMODB_TABLE=${{ vars.BACKEND_DYNAMODB_TABLE }}" >> "$GITHUB_ENV"
          echo "BACKEND_DYNAMODB_TABLE is $BACKEND_DYNAMODB_TABLE"



  deploy-testing:
    # NOTE: No name
    if: github.event.ref == 'refs/heads/master'
    needs: [Start]
    # NOTE: No environment
    # NOTE: No permissions
    # NOTE: No outputs
    uses: ./.github/workflows/deploy.yml
    with:
      environment: testing
      BACKEND_DYNAMODB_TABLE: ${{ vars.BACKEND_DYNAMODB_TABLE }}


  deploy-qa:
    # NOTE: No name
    needs: [deploy-testing]
    # NOTE: No environment
    # NOTE: No permissions
    # NOTE: No outputs
    uses: ./.github/workflows/deploy.yml
    with:
      environment: qa
      BACKEND_DYNAMODB_TABLE: ${{ vars.BACKEND_DYNAMODB_TABLE }}
