name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# concurrency required to avoid terraform lock contention during ECR provisioning
concurrency: cicd-${{ github.repository }}-pipeline

jobs:

  Setup: # Bolster
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder
        run: echo setting up!


  deploy-dev:
    name: Deploy to Dev Env
    if: github.event_name == 'pull_request'
    needs: [Setup]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: ./.github/workflows/deploy.yml
        with:
          AWS_REGION: ${{ vars.AWS_REGION }}
          BACKEND_S3_BUCKET: ${{ vars.BACKEND_S3_BUCKET }}
          AWS_GITHUB_ACCESS_ROLE: ${{ secrets.AWS_GITHUB_ACCESS_ROLE }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        
            
  deploy-test:
    name: Deploy to Test Env
    if: github.event.ref == 'refs/heads/master'
    needs: [Setup]
    runs-on: ubuntu-latest

    environment:
      name: testing

    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy
        uses: ./.github/workflows/deploy.yml
        with:
          environment: testing
          AWS_REGION: ${{ vars.AWS_REGION }}
          BACKEND_S3_BUCKET: ${{ vars.BACKEND_S3_BUCKET }}
          AWS_GITHUB_ACCESS_ROLE: ${{ secrets.AWS_GITHUB_ACCESS_ROLE }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        
        
  deploy-qa:
    name: Deploy to QA Env
    needs: [deploy-test]
    runs-on: ubuntu-latest

    environment:
      name: qa

    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy
        uses: ./.github/workflows/deploy.yml
        with:
          environment: qa
          AWS_REGION: ${{ vars.AWS_REGION }}
          BACKEND_S3_BUCKET: ${{ vars.BACKEND_S3_BUCKET }}
          AWS_GITHUB_ACCESS_ROLE: ${{ secrets.AWS_GITHUB_ACCESS_ROLE }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
